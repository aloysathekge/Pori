[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pori"
version = "0.1.0"
description = "A simple, extensible AI agent framework with tool integration and memory"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Aloy Sathekge", email = "sathekgealoy@gmail.com"}
]
keywords = ["ai", "agent", "llm", "tools", "automation", "langchain"]
classifiers = [
   
]
requires-python = ">=3.8.1"
dependencies = [
    "langchain>=0.2.0",
    "langchain-anthropic>=0.1.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "requests>=2.28.0",
    "numpy>=1.24.0",
]

[tool.setuptools.packages.find]
where = ["."] 
include = ["pori*"]
exclude = ["dev_docs*", "tests*", "examples*"]

[project.optional-dependencies]
test = [
    "pytest>=7.3.1",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "pytest-cov>=4.1.0",
    "hypothesis>=6.75.0",
    "aiohttp>=3.8.4",
    "black>=23.3.0",
    "isort>=5.12.0",
    "mypy>=1.3.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "memory: tests for memory subsystem",
    "tools: tests for tools subsystem",
    "agent: tests for agent functionality",
    "orchestrator: tests for orchestrator functionality",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
]

[tool.coverage.run]
source = ["pori"]
omit = ["tests/*", "**/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
